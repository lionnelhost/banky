package sn.modeltech.banky.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DispositifSercuriteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositifSercuriteAllPropertiesEquals(DispositifSercurite expected, DispositifSercurite actual) {
        assertDispositifSercuriteAutoGeneratedPropertiesEquals(expected, actual);
        assertDispositifSercuriteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositifSercuriteAllUpdatablePropertiesEquals(DispositifSercurite expected, DispositifSercurite actual) {
        assertDispositifSercuriteUpdatableFieldsEquals(expected, actual);
        assertDispositifSercuriteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositifSercuriteAutoGeneratedPropertiesEquals(DispositifSercurite expected, DispositifSercurite actual) {
        assertThat(expected)
            .as("Verify DispositifSercurite auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositifSercuriteUpdatableFieldsEquals(DispositifSercurite expected, DispositifSercurite actual) {
        assertThat(expected)
            .as("Verify DispositifSercurite relevant properties")
            .satisfies(e -> assertThat(e.getIdCanal()).as("check idCanal").isEqualTo(actual.getIdCanal()))
            .satisfies(e -> assertThat(e.getIdTypeTransaction()).as("check idTypeTransaction").isEqualTo(actual.getIdTypeTransaction()))
            .satisfies(e -> assertThat(e.getIdDispositif()).as("check idDispositif").isEqualTo(actual.getIdDispositif()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositifSercuriteUpdatableRelationshipsEquals(DispositifSercurite expected, DispositifSercurite actual) {
        assertThat(expected)
            .as("Verify DispositifSercurite relationships")
            .satisfies(e -> assertThat(e.getCanal()).as("check canal").isEqualTo(actual.getCanal()))
            .satisfies(e -> assertThat(e.getTypeTransaction()).as("check typeTransaction").isEqualTo(actual.getTypeTransaction()))
            .satisfies(e ->
                assertThat(e.getDispositifSignature()).as("check dispositifSignature").isEqualTo(actual.getDispositifSignature())
            );
    }
}
