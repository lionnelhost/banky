package sn.modeltech.banky.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DispositifSignatureAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositifSignatureAllPropertiesEquals(DispositifSignature expected, DispositifSignature actual) {
        assertDispositifSignatureAutoGeneratedPropertiesEquals(expected, actual);
        assertDispositifSignatureAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositifSignatureAllUpdatablePropertiesEquals(DispositifSignature expected, DispositifSignature actual) {
        assertDispositifSignatureUpdatableFieldsEquals(expected, actual);
        assertDispositifSignatureUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositifSignatureAutoGeneratedPropertiesEquals(DispositifSignature expected, DispositifSignature actual) {
        // empty method
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositifSignatureUpdatableFieldsEquals(DispositifSignature expected, DispositifSignature actual) {
        assertThat(expected)
            .as("Verify DispositifSignature relevant properties")
            .satisfies(e -> assertThat(e.getIdDispositif()).as("check idDispositif").isEqualTo(actual.getIdDispositif()))
            .satisfies(e -> assertThat(e.getLibelle()).as("check libelle").isEqualTo(actual.getLibelle()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositifSignatureUpdatableRelationshipsEquals(DispositifSignature expected, DispositifSignature actual) {
        // empty method
    }
}
