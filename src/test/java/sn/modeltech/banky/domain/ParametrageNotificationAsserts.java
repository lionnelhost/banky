package sn.modeltech.banky.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ParametrageNotificationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParametrageNotificationAllPropertiesEquals(ParametrageNotification expected, ParametrageNotification actual) {
        assertParametrageNotificationAutoGeneratedPropertiesEquals(expected, actual);
        assertParametrageNotificationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParametrageNotificationAllUpdatablePropertiesEquals(
        ParametrageNotification expected,
        ParametrageNotification actual
    ) {
        assertParametrageNotificationUpdatableFieldsEquals(expected, actual);
        assertParametrageNotificationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParametrageNotificationAutoGeneratedPropertiesEquals(
        ParametrageNotification expected,
        ParametrageNotification actual
    ) {
        // empty method
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParametrageNotificationUpdatableFieldsEquals(
        ParametrageNotification expected,
        ParametrageNotification actual
    ) {
        assertThat(expected)
            .as("Verify ParametrageNotification relevant properties")
            .satisfies(e -> assertThat(e.getIdParamNotif()).as("check idParamNotif").isEqualTo(actual.getIdParamNotif()))
            .satisfies(e -> assertThat(e.getObjetNotif()).as("check objetNotif").isEqualTo(actual.getObjetNotif()))
            .satisfies(e -> assertThat(e.getTypeNotif()).as("check typeNotif").isEqualTo(actual.getTypeNotif()))
            .satisfies(e -> assertThat(e.getContenu()).as("check contenu").isEqualTo(actual.getContenu()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParametrageNotificationUpdatableRelationshipsEquals(
        ParametrageNotification expected,
        ParametrageNotification actual
    ) {
        // empty method
    }
}
